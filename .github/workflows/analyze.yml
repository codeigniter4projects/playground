# When a PR is opened or a push is made, perform
# a static analysis check on the code using PHPStan.
name: PHPStan

on:
  pull_request:
    branches:
      - 'develop'
    paths:
      - 'app/**'
      - 'tests/**'
      - 'composer.**'
      - 'phpstan*'
      - '.github/workflows/analyze.yml'
  push:
    branches:
      - 'develop'
    paths:
      - 'app/**'
      - 'tests/**'
      - 'composer.**'
      - 'phpstan*'
      - '.github/workflows/analyze.yml'

jobs:
  build:
    name: PHP ${{ matrix.php-versions }} Static Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.11.0
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer, pecl, phpunit
          extensions: intl, json, mbstring, mysqlnd, xdebug, xml, sqlite3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Create composer cache directory
        run: mkdir -p ${{ steps.composer-cache.outputs.dir }}

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Create PHPStan cache directory
        run: mkdir -p build/phpstan

      - name: Cache PHPStan results
        uses: actions/cache@v2
        with:
          path: build/phpstan
          key: ${{ runner.os }}-phpstan-${{ github.sha }}
          restore-keys: ${{ runner.os }}-phpstan-

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
        # To prevent rate limiting you may need to supply an OAuth token in Settings > Secrets
        # env:
          # https://getcomposer.org/doc/articles/troubleshooting.md#api-rate-limit-and-oauth-tokens
          # COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}

      - name: Run static analysis
        run: vendor/bin/phpstan analyze
